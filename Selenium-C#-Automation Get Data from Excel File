using System;
using System.Windows.Forms;
using OpenQA.Selenium;
using OpenQA.Selenium.Edge;
using OpenQA.Selenium.Support.UI;
using System.Threading;
using OfficeOpenXml; 
using System.IO;

namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            ExcelPackage.LicenseContext = LicenseContext.NonCommercial;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            // File path to the Excel file
            string excelFilePath = @"C:\Users\ymlinnovation-dev\source\repos\WindowsFormsApp1\WindowsFormsApp1\TestMarj.xlsx";

            // Read data from Excel
            var data = ReadDataFromExcel(excelFilePath);

            if (data != null)
            {
                // Extract data from Excel
                string fname = data[0];
                string lname = data[1];
                string mobile = data[2];
                string clearanceId = data[6];
                string bdayYear = data[3];
                string bdayMonth = data[4];
                string bdayDay = data[5];

                // Initialize the Edge WebDriver
                EdgeOptions options = new EdgeOptions();
                using (IWebDriver driver = new EdgeDriver(options))
                {
                    try
                    {
                        // Navigate to the NBI Clearance website
                        string url = "https://clearance.nbi.gov.ph/";
                        driver.Navigate().GoToUrl(url);
                        driver.Manage().Window.Maximize();

                        WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));

                        // Locate and click "I AGREE" button
                        IWebElement agreeButton = wait.Until(d => d.FindElement(By.XPath("//*[contains(text(), 'I AGREE')]")));
                        agreeButton.Click();

                        // Close any modals or popups
                        IWebElement closeButton = wait.Until(d => d.FindElement(By.XPath("//*[contains(text(), 'Close')]")));
                        closeButton.Click();
                        IWebElement close2Button = wait.Until(d => d.FindElement(By.XPath("//*[contains(text(), 'Close')]")));
                        close2Button.Click();

                        // Fill in the form fields
                        driver.FindElement(By.Name("fname")).SendKeys(fname);
                        driver.FindElement(By.Name("lname")).SendKeys(lname);
                        driver.FindElement(By.Name("mobile")).SendKeys(mobile);
                        driver.FindElement(By.Name("clearance_id")).SendKeys(clearanceId);

                        // Select birthdate from dropdowns
                        IWebElement yearDropdownElement = wait.Until(d => d.FindElement(By.Name("bday_year")));
                        SelectElement yearDropdown = new SelectElement(yearDropdownElement);
                        yearDropdown.SelectByText(bdayYear);

                        IWebElement monthDropdownElement = wait.Until(d => d.FindElement(By.Name("bday_month")));
                        SelectElement monthDropdown = new SelectElement(monthDropdownElement);
                        monthDropdown.SelectByText(bdayMonth);

                        IWebElement dayDropdownElement = wait.Until(d => d.FindElement(By.Name("bday_day")));
                        SelectElement dayDropdown = new SelectElement(dayDropdownElement);
                        dayDropdown.SelectByText(bdayDay);

                        // Wait for any actions or submission to be completed
                        Thread.Sleep(9000);
                    }
                    finally
                    {
                        // driver.Quit(); // Close the driver when done
                    }
                }
            }
            else
            {
                MessageBox.Show("Error reading Excel file data.");
            }
        }

        // Method to read data from Excel
        private string[] ReadDataFromExcel(string filePath)
        {
            try
            {
                using (var package = new ExcelPackage(new FileInfo(filePath)))
                {
                    ExcelWorksheet worksheet = package.Workbook.Worksheets[0]; // First worksheet
                    if (worksheet.Dimension == null)
                    {
                        return null;
                    }

                    // Assuming data starts at row 2, and columns are in this order: fname, lname, mobile, clearance_id, bday_year, bday_month, bday_day
                    string fname = worksheet.Cells[2, 1].Text; // First Name (Row 2, Column 1)
                    string lname = worksheet.Cells[2, 2].Text; // Last Name (Row 2, Column 2)
                    string mobile = worksheet.Cells[2, 3].Text; // Mobile (Row 2, Column 3)
                    string clearanceId = worksheet.Cells[2, 4].Text; // Clearance ID (Row 2, Column 4)
                    string bdayYear = worksheet.Cells[2, 5].Text; // Birth Year (Row 2, Column 5)
                    string bdayMonth = worksheet.Cells[2, 6].Text; // Birth Month (Row 2, Column 6)
                    string bdayDay = worksheet.Cells[2, 7].Text; // Birth Day (Row 2, Column 7)

                    return new string[] { fname, lname, mobile, clearanceId, bdayYear, bdayMonth, bdayDay };
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error reading Excel file: " + ex.Message);
                return null;
            }
        }
    }
}
